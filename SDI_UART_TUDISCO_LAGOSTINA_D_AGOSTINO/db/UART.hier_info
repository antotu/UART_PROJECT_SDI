|UART
RESETn => BusInterface:BI.resetn
RxD => rx_unit:RX.RXD
ATNACK => BusInterface:BI.ATNACK
R_Wn => BusInterface:BI.R_Wn
CS => BusInterface:BI.CS
clock => tx_dp_cu:TX.CLK
clock => rx_unit:RX.CLK
clock => BusInterface:BI.CLK
TxD << tx_dp_cu:TX.TXD
ATN << BusInterface:BI.ATN
DIN[0] => BusInterface:BI.DIN[0]
DIN[1] => BusInterface:BI.DIN[1]
DIN[2] => BusInterface:BI.DIN[2]
DIN[3] => BusInterface:BI.DIN[3]
DIN[4] => BusInterface:BI.DIN[4]
DIN[5] => BusInterface:BI.DIN[5]
DIN[6] => BusInterface:BI.DIN[6]
DIN[7] => BusInterface:BI.DIN[7]
DOUT[0] << BusInterface:BI.DOUT[0]
DOUT[1] << BusInterface:BI.DOUT[1]
DOUT[2] << BusInterface:BI.DOUT[2]
DOUT[3] << BusInterface:BI.DOUT[3]
DOUT[4] << BusInterface:BI.DOUT[4]
DOUT[5] << BusInterface:BI.DOUT[5]
DOUT[6] << BusInterface:BI.DOUT[6]
DOUT[7] << BusInterface:BI.DOUT[7]
ADD[0] => BusInterface:BI.A[0]
ADD[1] => BusInterface:BI.A[1]
ADD[2] => BusInterface:BI.A[2]


|UART|tx_dp_cu:TX
P_IN[0] => blocco_txd:blocco_tx.P_IN[0]
P_IN[1] => blocco_txd:blocco_tx.P_IN[1]
P_IN[2] => blocco_txd:blocco_tx.P_IN[2]
P_IN[3] => blocco_txd:blocco_tx.P_IN[3]
P_IN[4] => blocco_txd:blocco_tx.P_IN[4]
P_IN[5] => blocco_txd:blocco_tx.P_IN[5]
P_IN[6] => blocco_txd:blocco_tx.P_IN[6]
P_IN[7] => blocco_txd:blocco_tx.P_IN[7]
START => currentState.DATAB
START => Selector0.IN2
ENABLE => currentState.OUTPUTSELECT
ENABLE => currentState.OUTPUTSELECT
ENABLE => currentState.OUTPUTSELECT
ENABLE => currentState.OUTPUTSELECT
ENABLE => currentState.OUTPUTSELECT
ENABLE => currentState.OUTPUTSELECT
ENABLE => currentState.OUTPUTSELECT
ENABLE => currentState.OUTPUTSELECT
ENABLE => currentState.OUTPUTSELECT
ENABLE => currentState.OUTPUTSELECT
ENABLE => currentState.OUTPUTSELECT
ENABLE => currentState.TX_RESET.DATAIN
CLK => blocco_txd:blocco_tx.CLK
CLK => SR_FF:FF.clk
CLK => counter_2_tc:COUNTER2TC.CLK
CLK => counter_with_tc:COUNTER1TC.CLK
CLK => currentState~3.DATAIN
TXD <= blocco_txd:blocco_tx.TXD
DONE <= SR_FF:FF.Q


|UART|tx_dp_cu:TX|blocco_txd:blocco_tx
P_IN[0] => shift_register_piso_8bit:BLOCCO_SHIFT.P_IN[0]
P_IN[1] => shift_register_piso_8bit:BLOCCO_SHIFT.P_IN[1]
P_IN[2] => shift_register_piso_8bit:BLOCCO_SHIFT.P_IN[2]
P_IN[3] => shift_register_piso_8bit:BLOCCO_SHIFT.P_IN[3]
P_IN[4] => shift_register_piso_8bit:BLOCCO_SHIFT.P_IN[4]
P_IN[5] => shift_register_piso_8bit:BLOCCO_SHIFT.P_IN[5]
P_IN[6] => shift_register_piso_8bit:BLOCCO_SHIFT.P_IN[6]
P_IN[7] => shift_register_piso_8bit:BLOCCO_SHIFT.P_IN[7]
LOAD => shift_register_piso_8bit:BLOCCO_SHIFT.LOAD
SHIFT => shift_register_piso_8bit:BLOCCO_SHIFT.SHIFT
clear_piso => shift_register_piso_8bit:BLOCCO_SHIFT.clear_piso
F_0 => O_1.IN1
F_1 => TXD.IN1
CLK => shift_register_piso_8bit:BLOCCO_SHIFT.CLK
TXD <= TXD.DB_MAX_OUTPUT_PORT_TYPE


|UART|tx_dp_cu:TX|blocco_txd:blocco_tx|shift_register_piso_8bit:BLOCCO_SHIFT
S_OUT <= S_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE
clear_piso => temp.OUTPUTSELECT
clear_piso => temp.OUTPUTSELECT
clear_piso => temp.OUTPUTSELECT
clear_piso => temp.OUTPUTSELECT
clear_piso => temp.OUTPUTSELECT
clear_piso => temp.OUTPUTSELECT
clear_piso => temp.OUTPUTSELECT
clear_piso => S_OUT~reg0.ENA
SHIFT => temp.OUTPUTSELECT
SHIFT => temp.OUTPUTSELECT
SHIFT => temp.OUTPUTSELECT
SHIFT => temp.OUTPUTSELECT
SHIFT => temp.OUTPUTSELECT
SHIFT => temp.OUTPUTSELECT
SHIFT => temp.OUTPUTSELECT
SHIFT => S_OUT.OUTPUTSELECT
LOAD => temp.OUTPUTSELECT
LOAD => temp.OUTPUTSELECT
LOAD => temp.OUTPUTSELECT
LOAD => temp.OUTPUTSELECT
LOAD => temp.OUTPUTSELECT
LOAD => temp.OUTPUTSELECT
LOAD => temp.OUTPUTSELECT
LOAD => S_OUT.OUTPUTSELECT
CLK => S_OUT~reg0.CLK
CLK => temp[1].CLK
CLK => temp[2].CLK
CLK => temp[3].CLK
CLK => temp[4].CLK
CLK => temp[5].CLK
CLK => temp[6].CLK
CLK => temp[7].CLK
P_IN[0] => S_OUT.DATAB
P_IN[1] => temp.DATAB
P_IN[2] => temp.DATAB
P_IN[3] => temp.DATAB
P_IN[4] => temp.DATAB
P_IN[5] => temp.DATAB
P_IN[6] => temp.DATAB
P_IN[7] => temp.DATAB


|UART|tx_dp_cu:TX|SR_FF:FF
S => process_0.IN0
S => process_0.IN0
S => process_0.IN0
R => process_0.IN1
R => process_0.IN1
R => process_0.IN1
clk => Q~reg0.CLK
clk => Qprev.CLK
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|tx_dp_cu:TX|counter_2_tc:COUNTER2TC
EN_CNT => contatoreX:COUNTER.EN_CNT
CLEAR => contatoreX:COUNTER.CLEAR
CLK => contatoreX:COUNTER.CLK
TC1 <= terminal_count_analyzer:TC_ANALYZER_1.TC
TC2 <= terminal_count_analyzer:TC_ANALYZER_2.TC


|UART|tx_dp_cu:TX|counter_2_tc:COUNTER2TC|contatoreX:COUNTER
EN_CNT => DOUT.OUTPUTSELECT
EN_CNT => DOUT.OUTPUTSELECT
EN_CNT => DOUT.OUTPUTSELECT
EN_CNT => DOUT.OUTPUTSELECT
EN_CNT => DOUT.OUTPUTSELECT
EN_CNT => DOUT.OUTPUTSELECT
EN_CNT => DOUT.OUTPUTSELECT
EN_CNT => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLK => DOUT[0]~reg0.CLK
CLK => DOUT[1]~reg0.CLK
CLK => DOUT[2]~reg0.CLK
CLK => DOUT[3]~reg0.CLK
CLK => DOUT[4]~reg0.CLK
CLK => DOUT[5]~reg0.CLK
CLK => DOUT[6]~reg0.CLK
CLK => DOUT[7]~reg0.CLK
DOUT[0] <= DOUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[1] <= DOUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[2] <= DOUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[3] <= DOUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[4] <= DOUT[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[5] <= DOUT[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[6] <= DOUT[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[7] <= DOUT[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|tx_dp_cu:TX|counter_2_tc:COUNTER2TC|terminal_count_analyzer:TC_ANALYZER_1
DATA_TO_ANALYZE[0] => Equal0.IN7
DATA_TO_ANALYZE[1] => Equal0.IN4
DATA_TO_ANALYZE[2] => Equal0.IN3
DATA_TO_ANALYZE[3] => Equal0.IN6
DATA_TO_ANALYZE[4] => Equal0.IN2
DATA_TO_ANALYZE[5] => Equal0.IN1
DATA_TO_ANALYZE[6] => Equal0.IN0
DATA_TO_ANALYZE[7] => Equal0.IN5
TC <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|UART|tx_dp_cu:TX|counter_2_tc:COUNTER2TC|terminal_count_analyzer:TC_ANALYZER_2
DATA_TO_ANALYZE[0] => Equal0.IN4
DATA_TO_ANALYZE[1] => Equal0.IN7
DATA_TO_ANALYZE[2] => Equal0.IN6
DATA_TO_ANALYZE[3] => Equal0.IN3
DATA_TO_ANALYZE[4] => Equal0.IN2
DATA_TO_ANALYZE[5] => Equal0.IN1
DATA_TO_ANALYZE[6] => Equal0.IN0
DATA_TO_ANALYZE[7] => Equal0.IN5
TC <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|UART|tx_dp_cu:TX|counter_with_tc:COUNTER1TC
EN_CNT => contatoreX:COUNTER.EN_CNT
CLEAR => contatoreX:COUNTER.CLEAR
CLK => contatoreX:COUNTER.CLK
TC <= terminal_count_analyzer:TC_ANALYZER.TC


|UART|tx_dp_cu:TX|counter_with_tc:COUNTER1TC|contatoreX:COUNTER
EN_CNT => DOUT.OUTPUTSELECT
EN_CNT => DOUT.OUTPUTSELECT
EN_CNT => DOUT.OUTPUTSELECT
EN_CNT => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLK => DOUT[0]~reg0.CLK
CLK => DOUT[1]~reg0.CLK
CLK => DOUT[2]~reg0.CLK
CLK => DOUT[3]~reg0.CLK
DOUT[0] <= DOUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[1] <= DOUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[2] <= DOUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[3] <= DOUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|tx_dp_cu:TX|counter_with_tc:COUNTER1TC|terminal_count_analyzer:TC_ANALYZER
DATA_TO_ANALYZE[0] => Equal0.IN2
DATA_TO_ANALYZE[1] => Equal0.IN1
DATA_TO_ANALYZE[2] => Equal0.IN0
DATA_TO_ANALYZE[3] => Equal0.IN3
TC <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX
RXD => rx_core:UUT.RxD
CLK => CU_RX:CU.CLK
CLK => rx_core:UUT.CLK
EN_RX => CU_RX:CU.EN_RX
DATA_OUT[0] <= rx_core:UUT.DATA_OUT[0]
DATA_OUT[1] <= rx_core:UUT.DATA_OUT[1]
DATA_OUT[2] <= rx_core:UUT.DATA_OUT[2]
DATA_OUT[3] <= rx_core:UUT.DATA_OUT[3]
DATA_OUT[4] <= rx_core:UUT.DATA_OUT[4]
DATA_OUT[5] <= rx_core:UUT.DATA_OUT[5]
DATA_OUT[6] <= rx_core:UUT.DATA_OUT[6]
DATA_OUT[7] <= rx_core:UUT.DATA_OUT[7]
ERROR <= rx_core:UUT.ERROR
BUSY <= rx_core:UUT.BUSY
DONE <= rx_core:UUT.DONE


|UART|rx_unit:RX|CU_RX:CU
CLK => CURRENT_STATE~1.DATAIN
EN_RX => Selector0.IN4
EN_RX => CURRENT_STATE.OUTPUTSELECT
EN_RX => CURRENT_STATE.OUTPUTSELECT
EN_RX => CURRENT_STATE.OUTPUTSELECT
EN_RX => CURRENT_STATE.OUTPUTSELECT
EN_RX => CURRENT_STATE.OUTPUTSELECT
EN_RX => CURRENT_STATE.OUTPUTSELECT
EN_RX => CURRENT_STATE.OUTPUTSELECT
EN_RX => CURRENT_STATE.OUTPUTSELECT
EN_RX => CURRENT_STATE.OUTPUTSELECT
EN_RX => CURRENT_STATE.OUTPUTSELECT
EN_RX => CURRENT_STATE.OUTPUTSELECT
EN_RX => CURRENT_STATE.OUTPUTSELECT
EN_RX => CURRENT_STATE.OUTPUTSELECT
EN_RX => CURRENT_STATE.OUTPUTSELECT
EN_RX => CURRENT_STATE.OUTPUTSELECT
EN_RX => CURRENT_STATE.OUTPUTSELECT
EN_RX => CURRENT_STATE.OUTPUTSELECT
EN_RX => CURRENT_STATE.OUTPUTSELECT
EN_RX => CURRENT_STATE.OUTPUTSELECT
EN_RX => CURRENT_STATE.OUTPUTSELECT
EN_RX => NEXT_STATE.RESET_STATE.DATAB
ERROR_STATUS => NEXT_STATE.MANAGE_ERROR_START_BIT.DATAB
ERROR_STATUS => NEXT_STATE.ERROR_STOP_BIT.DATAB
ERROR_STATUS => Selector1.IN3
ERROR_STATUS => Selector5.IN2
START => NEXT_STATE.OUTPUTSELECT
START => NEXT_STATE.OUTPUTSELECT
START => NEXT_STATE.STATE_AFTER_START_1.DATAB
TC_TIME_SAMPLE => NEXT_STATE.DATAA
TC_TIME_SAMPLE => NEXT_STATE.DATAA
TC_TIME_SAMPLE => Selector3.IN3
TC_TIME_SAMPLE => NEXT_STATE.DATAA
TC_TIME_SAMPLE => Selector2.IN2
TC_TIME_SAMPLE => NEXT_STATE.OUTPUTSELECT
TC_TIME_SAMPLE => NEXT_STATE.OUTPUTSELECT
TC_TIME_SAMPLE => Selector4.IN2
TC_TIME_SAMPLE => NEXT_STATE.OUTPUTSELECT
TC_TIME_SAMPLE => NEXT_STATE.OUTPUTSELECT
TC_TIME_SAMPLE => Selector7.IN2
TC_TIME_SAMPLE => NEXT_STATE.DATAA
TC_8_SAMPLES => NEXT_STATE.DATAA
TC_8_SAMPLES => NEXT_STATE.OUTPUTSELECT
TC_8_SAMPLES => NEXT_STATE.OUTPUTSELECT
TC_8_SAMPLES => NEXT_STATE.EVALUATE_ERROR_STOP.DATAB
TC_8_SAMPLES => NEXT_STATE.DATAA
TC_4_SAMPLES => NEXT_STATE.DATAA
TC_4_SAMPLES => NEXT_STATE.DATAA
TC_READ_ALL => Selector9.IN3
TC_READ_ALL => Selector6.IN3
TC_TIME_NOP => NEXT_STATE.NOP_START_SYMB_END.DATAB
TC_TIME_NOP => NEXT_STATE.NOP_SYMBOL_END.DATAB
TC_TIME_NOP => Selector5.IN1
TC_TIME_NOP => Selector8.IN2
CLEAR_DOUT <= CLEAR_DOUT.DB_MAX_OUTPUT_PORT_TYPE
LD_SHIFT_R8 <= WideOr17.DB_MAX_OUTPUT_PORT_TYPE
CLEAR_R8 <= WideOr11.DB_MAX_OUTPUT_PORT_TYPE
MUX_SEL_STOP_BIT <= MUX_SEL_STOP_BIT.DB_MAX_OUTPUT_PORT_TYPE
LD_ERROR <= LD_ERROR.DB_MAX_OUTPUT_PORT_TYPE
CLEAR_ERROR <= CLEAR_ERROR.DB_MAX_OUTPUT_PORT_TYPE
CLEAR_BUSY <= WideOr12.DB_MAX_OUTPUT_PORT_TYPE
LD_BUSY <= LD_BUSY.DB_MAX_OUTPUT_PORT_TYPE
LD_SHIFT_DOUT <= LD_SHIFT_DOUT.DB_MAX_OUTPUT_PORT_TYPE
EN_CNT_TIME_SAMPLES <= WideOr18.DB_MAX_OUTPUT_PORT_TYPE
CLEAR_CNT_TIME_SAMPLES <= WideOr13.DB_MAX_OUTPUT_PORT_TYPE
EN_CNT_8_SAMPLES <= WideOr19.DB_MAX_OUTPUT_PORT_TYPE
CLEAR_CNT_8_SAMPLES <= WideOr14.DB_MAX_OUTPUT_PORT_TYPE
EN_CNT_SYMBOL <= EN_CNT_SYMBOL.DB_MAX_OUTPUT_PORT_TYPE
CLEAR_CNT_SYMBOL <= WideOr15.DB_MAX_OUTPUT_PORT_TYPE
CLEAR_DONE <= CLEAR_DONE.DB_MAX_OUTPUT_PORT_TYPE
LD_DONE <= LD_DONE.DB_MAX_OUTPUT_PORT_TYPE
EN_CNT_TIME_NOP <= WideOr20.DB_MAX_OUTPUT_PORT_TYPE
CLEAR_CNT_TIME_NOP <= WideOr16.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT
CLK => RX_SHIFT_REGISTER:RX8_SAMPLES.CLK
CLK => SR_FF:SR_BUSY.clk
CLK => SR_FF:SR_ERROR.clk
CLK => RX_SHIFT_REGISTER:REG_DATA_OUT.CLK
CLK => RX_counter_with_tc:COUNTER_TIME_SAMPLES.CLK
CLK => RX_counter_with_tc:COUNTER_SYMBOLS.CLK
CLK => SR_FF:SR_DONE.clk
CLK => RX_counter_2_tc:CNT_SAMPLES.CLK
CLK => RX_counter_with_tc:CNT_TIME_NOP.CLK
RxD => RX_SHIFT_REGISTER:RX8_SAMPLES.DATA_IN
LD_SHIFT_R8 => RX_SHIFT_REGISTER:RX8_SAMPLES.LD_SHIFT_REG
CLEAR_R8 => RX_SHIFT_REGISTER:RX8_SAMPLES.CLEAR_REG
MUX_SEL_STOP_BIT => RX_mux2to1:MUX_SEL_EXPECTED_VAL.SEL
ERROR_STATUS_SIGNAL <= ERROR_STATUS_SIGNAL.DB_MAX_OUTPUT_PORT_TYPE
LD_ERROR => SR_FF:SR_ERROR.S
CLEAR_ERROR => SR_FF:SR_ERROR.R
ERROR <= SR_FF:SR_ERROR.Q
CLEAR_BUSY => SR_FF:SR_BUSY.R
LD_BUSY => SR_FF:SR_BUSY.S
BUSY <= SR_FF:SR_BUSY.Q
START <= RX_recognize_start:RICONOSCITORE_START.START
CLEAR_DOUT => RX_SHIFT_REGISTER:REG_DATA_OUT.CLEAR_REG
LOAD_SHIFT_DOUT => RX_SHIFT_REGISTER:REG_DATA_OUT.LD_SHIFT_REG
DATA_OUT[0] <= RX_SHIFT_REGISTER:REG_DATA_OUT.DOUT_REG[0]
DATA_OUT[1] <= RX_SHIFT_REGISTER:REG_DATA_OUT.DOUT_REG[1]
DATA_OUT[2] <= RX_SHIFT_REGISTER:REG_DATA_OUT.DOUT_REG[2]
DATA_OUT[3] <= RX_SHIFT_REGISTER:REG_DATA_OUT.DOUT_REG[3]
DATA_OUT[4] <= RX_SHIFT_REGISTER:REG_DATA_OUT.DOUT_REG[4]
DATA_OUT[5] <= RX_SHIFT_REGISTER:REG_DATA_OUT.DOUT_REG[5]
DATA_OUT[6] <= RX_SHIFT_REGISTER:REG_DATA_OUT.DOUT_REG[6]
DATA_OUT[7] <= RX_SHIFT_REGISTER:REG_DATA_OUT.DOUT_REG[7]
EN_CNT_TIME_SAMPLE => RX_counter_with_tc:COUNTER_TIME_SAMPLES.EN_CNT
CLEAR_CNT_TIME_SAMPLES => RX_counter_with_tc:COUNTER_TIME_SAMPLES.CLEAR
TC_TIME_SAMPLE <= RX_counter_with_tc:COUNTER_TIME_SAMPLES.TC
EN_CNT_8_SAMPLES => RX_counter_2_tc:CNT_SAMPLES.EN_CNT
CLEAR_CNT_8_SAMPLES => RX_counter_2_tc:CNT_SAMPLES.CLEAR
TC_8_SAMPLES <= RX_counter_2_tc:CNT_SAMPLES.TC2
TC_4_SAMPLES <= RX_counter_2_tc:CNT_SAMPLES.TC1
EN_CNT_SYMBOLS => RX_counter_with_tc:COUNTER_SYMBOLS.EN_CNT
CLEAR_CNT_SYMBOLS => RX_counter_with_tc:COUNTER_SYMBOLS.CLEAR
TC_SYMBOLS <= RX_counter_with_tc:COUNTER_SYMBOLS.TC
CLEAR_DONE => SR_FF:SR_DONE.R
LD_DONE => SR_FF:SR_DONE.S
DONE <= SR_FF:SR_DONE.Q
EN_CNT_TIME_NOP => RX_counter_with_tc:CNT_TIME_NOP.EN_CNT
CLEAR_CNT_TIME_NOP => RX_counter_with_tc:CNT_TIME_NOP.CLEAR
TC_TIME_NOP <= RX_counter_with_tc:CNT_TIME_NOP.TC


|UART|rx_unit:RX|rx_core:UUT|RX_SHIFT_REGISTER:RX8_SAMPLES
DATA_IN => RX_flip_flop:SHIFT_REG_GEN:0:FLIP_FLOP_GEN.DATA_IN
LD_SHIFT_REG => RX_flip_flop:SHIFT_REG_GEN:0:FLIP_FLOP_GEN.LD
LD_SHIFT_REG => RX_flip_flop:SHIFT_REG_GEN:1:FLIP_FLOP_GEN.LD
LD_SHIFT_REG => RX_flip_flop:SHIFT_REG_GEN:2:FLIP_FLOP_GEN.LD
LD_SHIFT_REG => RX_flip_flop:SHIFT_REG_GEN:3:FLIP_FLOP_GEN.LD
LD_SHIFT_REG => RX_flip_flop:SHIFT_REG_GEN:4:FLIP_FLOP_GEN.LD
LD_SHIFT_REG => RX_flip_flop:SHIFT_REG_GEN:5:FLIP_FLOP_GEN.LD
LD_SHIFT_REG => RX_flip_flop:SHIFT_REG_GEN:6:FLIP_FLOP_GEN.LD
LD_SHIFT_REG => RX_flip_flop:SHIFT_REG_GEN:7:FLIP_FLOP_GEN.LD
CLEAR_REG => RX_flip_flop:SHIFT_REG_GEN:0:FLIP_FLOP_GEN.CLEAR
CLEAR_REG => RX_flip_flop:SHIFT_REG_GEN:1:FLIP_FLOP_GEN.CLEAR
CLEAR_REG => RX_flip_flop:SHIFT_REG_GEN:2:FLIP_FLOP_GEN.CLEAR
CLEAR_REG => RX_flip_flop:SHIFT_REG_GEN:3:FLIP_FLOP_GEN.CLEAR
CLEAR_REG => RX_flip_flop:SHIFT_REG_GEN:4:FLIP_FLOP_GEN.CLEAR
CLEAR_REG => RX_flip_flop:SHIFT_REG_GEN:5:FLIP_FLOP_GEN.CLEAR
CLEAR_REG => RX_flip_flop:SHIFT_REG_GEN:6:FLIP_FLOP_GEN.CLEAR
CLEAR_REG => RX_flip_flop:SHIFT_REG_GEN:7:FLIP_FLOP_GEN.CLEAR
CLK => RX_flip_flop:SHIFT_REG_GEN:0:FLIP_FLOP_GEN.CLK
CLK => RX_flip_flop:SHIFT_REG_GEN:1:FLIP_FLOP_GEN.CLK
CLK => RX_flip_flop:SHIFT_REG_GEN:2:FLIP_FLOP_GEN.CLK
CLK => RX_flip_flop:SHIFT_REG_GEN:3:FLIP_FLOP_GEN.CLK
CLK => RX_flip_flop:SHIFT_REG_GEN:4:FLIP_FLOP_GEN.CLK
CLK => RX_flip_flop:SHIFT_REG_GEN:5:FLIP_FLOP_GEN.CLK
CLK => RX_flip_flop:SHIFT_REG_GEN:6:FLIP_FLOP_GEN.CLK
CLK => RX_flip_flop:SHIFT_REG_GEN:7:FLIP_FLOP_GEN.CLK
DOUT_REG[0] <= RX_flip_flop:SHIFT_REG_GEN:7:FLIP_FLOP_GEN.DATA_OUT
DOUT_REG[1] <= RX_flip_flop:SHIFT_REG_GEN:6:FLIP_FLOP_GEN.DATA_OUT
DOUT_REG[2] <= RX_flip_flop:SHIFT_REG_GEN:5:FLIP_FLOP_GEN.DATA_OUT
DOUT_REG[3] <= RX_flip_flop:SHIFT_REG_GEN:4:FLIP_FLOP_GEN.DATA_OUT
DOUT_REG[4] <= RX_flip_flop:SHIFT_REG_GEN:3:FLIP_FLOP_GEN.DATA_OUT
DOUT_REG[5] <= RX_flip_flop:SHIFT_REG_GEN:2:FLIP_FLOP_GEN.DATA_OUT
DOUT_REG[6] <= RX_flip_flop:SHIFT_REG_GEN:1:FLIP_FLOP_GEN.DATA_OUT
DOUT_REG[7] <= RX_flip_flop:SHIFT_REG_GEN:0:FLIP_FLOP_GEN.DATA_OUT


|UART|rx_unit:RX|rx_core:UUT|RX_SHIFT_REGISTER:RX8_SAMPLES|RX_flip_flop:\SHIFT_REG_GEN:0:FLIP_FLOP_GEN
DATA_IN => DATA_OUT.DATAB
CLK => DATA_OUT~reg0.CLK
CLEAR => DATA_OUT.OUTPUTSELECT
LD => DATA_OUT.OUTPUTSELECT
DATA_OUT <= DATA_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_SHIFT_REGISTER:RX8_SAMPLES|RX_flip_flop:\SHIFT_REG_GEN:1:FLIP_FLOP_GEN
DATA_IN => DATA_OUT.DATAB
CLK => DATA_OUT~reg0.CLK
CLEAR => DATA_OUT.OUTPUTSELECT
LD => DATA_OUT.OUTPUTSELECT
DATA_OUT <= DATA_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_SHIFT_REGISTER:RX8_SAMPLES|RX_flip_flop:\SHIFT_REG_GEN:2:FLIP_FLOP_GEN
DATA_IN => DATA_OUT.DATAB
CLK => DATA_OUT~reg0.CLK
CLEAR => DATA_OUT.OUTPUTSELECT
LD => DATA_OUT.OUTPUTSELECT
DATA_OUT <= DATA_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_SHIFT_REGISTER:RX8_SAMPLES|RX_flip_flop:\SHIFT_REG_GEN:3:FLIP_FLOP_GEN
DATA_IN => DATA_OUT.DATAB
CLK => DATA_OUT~reg0.CLK
CLEAR => DATA_OUT.OUTPUTSELECT
LD => DATA_OUT.OUTPUTSELECT
DATA_OUT <= DATA_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_SHIFT_REGISTER:RX8_SAMPLES|RX_flip_flop:\SHIFT_REG_GEN:4:FLIP_FLOP_GEN
DATA_IN => DATA_OUT.DATAB
CLK => DATA_OUT~reg0.CLK
CLEAR => DATA_OUT.OUTPUTSELECT
LD => DATA_OUT.OUTPUTSELECT
DATA_OUT <= DATA_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_SHIFT_REGISTER:RX8_SAMPLES|RX_flip_flop:\SHIFT_REG_GEN:5:FLIP_FLOP_GEN
DATA_IN => DATA_OUT.DATAB
CLK => DATA_OUT~reg0.CLK
CLEAR => DATA_OUT.OUTPUTSELECT
LD => DATA_OUT.OUTPUTSELECT
DATA_OUT <= DATA_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_SHIFT_REGISTER:RX8_SAMPLES|RX_flip_flop:\SHIFT_REG_GEN:6:FLIP_FLOP_GEN
DATA_IN => DATA_OUT.DATAB
CLK => DATA_OUT~reg0.CLK
CLEAR => DATA_OUT.OUTPUTSELECT
LD => DATA_OUT.OUTPUTSELECT
DATA_OUT <= DATA_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_SHIFT_REGISTER:RX8_SAMPLES|RX_flip_flop:\SHIFT_REG_GEN:7:FLIP_FLOP_GEN
DATA_IN => DATA_OUT.DATAB
CLK => DATA_OUT~reg0.CLK
CLEAR => DATA_OUT.OUTPUTSELECT
LD => DATA_OUT.OUTPUTSELECT
DATA_OUT <= DATA_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_recognize_start:RICONOSCITORE_START
DATA_INPUT[0] => AT_LEAST_3_1.IN0
DATA_INPUT[0] => AT_LEAST_3_1.IN0
DATA_INPUT[1] => AT_LEAST_3_1.IN1
DATA_INPUT[1] => AT_LEAST_3_1.IN1
DATA_INPUT[2] => AT_LEAST_3_1.IN0
DATA_INPUT[2] => AT_LEAST_3_1.IN0
DATA_INPUT[3] => AT_LEAST_3_1.IN1
DATA_INPUT[3] => AT_LEAST_3_1.IN1
DATA_INPUT[4] => ALL_ZERO.IN1
DATA_INPUT[5] => ALL_ZERO.IN1
DATA_INPUT[6] => ALL_ZERO.IN0
DATA_INPUT[7] => ALL_ZERO.IN1
START <= START.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|SR_FF:SR_BUSY
S => process_0.IN0
S => process_0.IN0
S => process_0.IN0
R => process_0.IN1
R => process_0.IN1
R => process_0.IN1
clk => Q~reg0.CLK
clk => Qprev.CLK
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_recognize_value:DECISORE_UNIT
INPUT_DATA[0] => RES.IN0
INPUT_DATA[0] => RES.IN0
INPUT_DATA[1] => RES.IN1
INPUT_DATA[1] => RES.IN1
INPUT_DATA[2] => RES.IN1
RES <= RES.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_mux2to1:MUX_SEL_EXPECTED_VAL
DATA1 => DATA_OUT.DATAB
DATA2 => DATA_OUT.DATAA
SEL => DATA_OUT.OUTPUTSELECT
DATA_OUT <= DATA_OUT.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|SR_FF:SR_ERROR
S => process_0.IN0
S => process_0.IN0
S => process_0.IN0
R => process_0.IN1
R => process_0.IN1
R => process_0.IN1
clk => Q~reg0.CLK
clk => Qprev.CLK
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_SHIFT_REGISTER:REG_DATA_OUT
DATA_IN => RX_flip_flop:SHIFT_REG_GEN:0:FLIP_FLOP_GEN.DATA_IN
LD_SHIFT_REG => RX_flip_flop:SHIFT_REG_GEN:0:FLIP_FLOP_GEN.LD
LD_SHIFT_REG => RX_flip_flop:SHIFT_REG_GEN:1:FLIP_FLOP_GEN.LD
LD_SHIFT_REG => RX_flip_flop:SHIFT_REG_GEN:2:FLIP_FLOP_GEN.LD
LD_SHIFT_REG => RX_flip_flop:SHIFT_REG_GEN:3:FLIP_FLOP_GEN.LD
LD_SHIFT_REG => RX_flip_flop:SHIFT_REG_GEN:4:FLIP_FLOP_GEN.LD
LD_SHIFT_REG => RX_flip_flop:SHIFT_REG_GEN:5:FLIP_FLOP_GEN.LD
LD_SHIFT_REG => RX_flip_flop:SHIFT_REG_GEN:6:FLIP_FLOP_GEN.LD
LD_SHIFT_REG => RX_flip_flop:SHIFT_REG_GEN:7:FLIP_FLOP_GEN.LD
CLEAR_REG => RX_flip_flop:SHIFT_REG_GEN:0:FLIP_FLOP_GEN.CLEAR
CLEAR_REG => RX_flip_flop:SHIFT_REG_GEN:1:FLIP_FLOP_GEN.CLEAR
CLEAR_REG => RX_flip_flop:SHIFT_REG_GEN:2:FLIP_FLOP_GEN.CLEAR
CLEAR_REG => RX_flip_flop:SHIFT_REG_GEN:3:FLIP_FLOP_GEN.CLEAR
CLEAR_REG => RX_flip_flop:SHIFT_REG_GEN:4:FLIP_FLOP_GEN.CLEAR
CLEAR_REG => RX_flip_flop:SHIFT_REG_GEN:5:FLIP_FLOP_GEN.CLEAR
CLEAR_REG => RX_flip_flop:SHIFT_REG_GEN:6:FLIP_FLOP_GEN.CLEAR
CLEAR_REG => RX_flip_flop:SHIFT_REG_GEN:7:FLIP_FLOP_GEN.CLEAR
CLK => RX_flip_flop:SHIFT_REG_GEN:0:FLIP_FLOP_GEN.CLK
CLK => RX_flip_flop:SHIFT_REG_GEN:1:FLIP_FLOP_GEN.CLK
CLK => RX_flip_flop:SHIFT_REG_GEN:2:FLIP_FLOP_GEN.CLK
CLK => RX_flip_flop:SHIFT_REG_GEN:3:FLIP_FLOP_GEN.CLK
CLK => RX_flip_flop:SHIFT_REG_GEN:4:FLIP_FLOP_GEN.CLK
CLK => RX_flip_flop:SHIFT_REG_GEN:5:FLIP_FLOP_GEN.CLK
CLK => RX_flip_flop:SHIFT_REG_GEN:6:FLIP_FLOP_GEN.CLK
CLK => RX_flip_flop:SHIFT_REG_GEN:7:FLIP_FLOP_GEN.CLK
DOUT_REG[0] <= RX_flip_flop:SHIFT_REG_GEN:7:FLIP_FLOP_GEN.DATA_OUT
DOUT_REG[1] <= RX_flip_flop:SHIFT_REG_GEN:6:FLIP_FLOP_GEN.DATA_OUT
DOUT_REG[2] <= RX_flip_flop:SHIFT_REG_GEN:5:FLIP_FLOP_GEN.DATA_OUT
DOUT_REG[3] <= RX_flip_flop:SHIFT_REG_GEN:4:FLIP_FLOP_GEN.DATA_OUT
DOUT_REG[4] <= RX_flip_flop:SHIFT_REG_GEN:3:FLIP_FLOP_GEN.DATA_OUT
DOUT_REG[5] <= RX_flip_flop:SHIFT_REG_GEN:2:FLIP_FLOP_GEN.DATA_OUT
DOUT_REG[6] <= RX_flip_flop:SHIFT_REG_GEN:1:FLIP_FLOP_GEN.DATA_OUT
DOUT_REG[7] <= RX_flip_flop:SHIFT_REG_GEN:0:FLIP_FLOP_GEN.DATA_OUT


|UART|rx_unit:RX|rx_core:UUT|RX_SHIFT_REGISTER:REG_DATA_OUT|RX_flip_flop:\SHIFT_REG_GEN:0:FLIP_FLOP_GEN
DATA_IN => DATA_OUT.DATAB
CLK => DATA_OUT~reg0.CLK
CLEAR => DATA_OUT.OUTPUTSELECT
LD => DATA_OUT.OUTPUTSELECT
DATA_OUT <= DATA_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_SHIFT_REGISTER:REG_DATA_OUT|RX_flip_flop:\SHIFT_REG_GEN:1:FLIP_FLOP_GEN
DATA_IN => DATA_OUT.DATAB
CLK => DATA_OUT~reg0.CLK
CLEAR => DATA_OUT.OUTPUTSELECT
LD => DATA_OUT.OUTPUTSELECT
DATA_OUT <= DATA_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_SHIFT_REGISTER:REG_DATA_OUT|RX_flip_flop:\SHIFT_REG_GEN:2:FLIP_FLOP_GEN
DATA_IN => DATA_OUT.DATAB
CLK => DATA_OUT~reg0.CLK
CLEAR => DATA_OUT.OUTPUTSELECT
LD => DATA_OUT.OUTPUTSELECT
DATA_OUT <= DATA_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_SHIFT_REGISTER:REG_DATA_OUT|RX_flip_flop:\SHIFT_REG_GEN:3:FLIP_FLOP_GEN
DATA_IN => DATA_OUT.DATAB
CLK => DATA_OUT~reg0.CLK
CLEAR => DATA_OUT.OUTPUTSELECT
LD => DATA_OUT.OUTPUTSELECT
DATA_OUT <= DATA_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_SHIFT_REGISTER:REG_DATA_OUT|RX_flip_flop:\SHIFT_REG_GEN:4:FLIP_FLOP_GEN
DATA_IN => DATA_OUT.DATAB
CLK => DATA_OUT~reg0.CLK
CLEAR => DATA_OUT.OUTPUTSELECT
LD => DATA_OUT.OUTPUTSELECT
DATA_OUT <= DATA_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_SHIFT_REGISTER:REG_DATA_OUT|RX_flip_flop:\SHIFT_REG_GEN:5:FLIP_FLOP_GEN
DATA_IN => DATA_OUT.DATAB
CLK => DATA_OUT~reg0.CLK
CLEAR => DATA_OUT.OUTPUTSELECT
LD => DATA_OUT.OUTPUTSELECT
DATA_OUT <= DATA_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_SHIFT_REGISTER:REG_DATA_OUT|RX_flip_flop:\SHIFT_REG_GEN:6:FLIP_FLOP_GEN
DATA_IN => DATA_OUT.DATAB
CLK => DATA_OUT~reg0.CLK
CLEAR => DATA_OUT.OUTPUTSELECT
LD => DATA_OUT.OUTPUTSELECT
DATA_OUT <= DATA_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_SHIFT_REGISTER:REG_DATA_OUT|RX_flip_flop:\SHIFT_REG_GEN:7:FLIP_FLOP_GEN
DATA_IN => DATA_OUT.DATAB
CLK => DATA_OUT~reg0.CLK
CLEAR => DATA_OUT.OUTPUTSELECT
LD => DATA_OUT.OUTPUTSELECT
DATA_OUT <= DATA_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_counter_with_tc:COUNTER_TIME_SAMPLES
EN_CNT => RX_contatore:COUNTER.EN_CNT
CLEAR => RX_contatore:COUNTER.CLEAR
CLK => RX_contatore:COUNTER.CLK
TC <= RX_terminal_count_analyzer:TC_ANALYZER.TC


|UART|rx_unit:RX|rx_core:UUT|RX_counter_with_tc:COUNTER_TIME_SAMPLES|RX_contatore:COUNTER
EN_CNT => DOUT.OUTPUTSELECT
EN_CNT => DOUT.OUTPUTSELECT
EN_CNT => DOUT.OUTPUTSELECT
EN_CNT => DOUT.OUTPUTSELECT
EN_CNT => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLK => DOUT[0]~reg0.CLK
CLK => DOUT[1]~reg0.CLK
CLK => DOUT[2]~reg0.CLK
CLK => DOUT[3]~reg0.CLK
CLK => DOUT[4]~reg0.CLK
DOUT[0] <= DOUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[1] <= DOUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[2] <= DOUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[3] <= DOUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[4] <= DOUT[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_counter_with_tc:COUNTER_TIME_SAMPLES|RX_terminal_count_analyzer:TC_ANALYZER
DATA_TO_ANALYZE[0] => Equal0.IN4
DATA_TO_ANALYZE[1] => Equal0.IN3
DATA_TO_ANALYZE[2] => Equal0.IN2
DATA_TO_ANALYZE[3] => Equal0.IN1
DATA_TO_ANALYZE[4] => Equal0.IN0
TC <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_counter_with_tc:COUNTER_SYMBOLS
EN_CNT => RX_contatore:COUNTER.EN_CNT
CLEAR => RX_contatore:COUNTER.CLEAR
CLK => RX_contatore:COUNTER.CLK
TC <= RX_terminal_count_analyzer:TC_ANALYZER.TC


|UART|rx_unit:RX|rx_core:UUT|RX_counter_with_tc:COUNTER_SYMBOLS|RX_contatore:COUNTER
EN_CNT => DOUT.OUTPUTSELECT
EN_CNT => DOUT.OUTPUTSELECT
EN_CNT => DOUT.OUTPUTSELECT
EN_CNT => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLK => DOUT[0]~reg0.CLK
CLK => DOUT[1]~reg0.CLK
CLK => DOUT[2]~reg0.CLK
CLK => DOUT[3]~reg0.CLK
DOUT[0] <= DOUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[1] <= DOUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[2] <= DOUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[3] <= DOUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_counter_with_tc:COUNTER_SYMBOLS|RX_terminal_count_analyzer:TC_ANALYZER
DATA_TO_ANALYZE[0] => Equal0.IN2
DATA_TO_ANALYZE[1] => Equal0.IN1
DATA_TO_ANALYZE[2] => Equal0.IN0
DATA_TO_ANALYZE[3] => Equal0.IN3
TC <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|SR_FF:SR_DONE
S => process_0.IN0
S => process_0.IN0
S => process_0.IN0
R => process_0.IN1
R => process_0.IN1
R => process_0.IN1
clk => Q~reg0.CLK
clk => Qprev.CLK
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_counter_2_tc:CNT_SAMPLES
EN_CNT => RX_contatore:COUNTER.EN_CNT
CLEAR => RX_contatore:COUNTER.CLEAR
CLK => RX_contatore:COUNTER.CLK
TC1 <= RX_terminal_count_analyzer:TC_ANALYZER_1.TC
TC2 <= RX_terminal_count_analyzer:TC_ANALYZER_2.TC


|UART|rx_unit:RX|rx_core:UUT|RX_counter_2_tc:CNT_SAMPLES|RX_contatore:COUNTER
EN_CNT => DOUT.OUTPUTSELECT
EN_CNT => DOUT.OUTPUTSELECT
EN_CNT => DOUT.OUTPUTSELECT
EN_CNT => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLK => DOUT[0]~reg0.CLK
CLK => DOUT[1]~reg0.CLK
CLK => DOUT[2]~reg0.CLK
CLK => DOUT[3]~reg0.CLK
DOUT[0] <= DOUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[1] <= DOUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[2] <= DOUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[3] <= DOUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_counter_2_tc:CNT_SAMPLES|RX_terminal_count_analyzer:TC_ANALYZER_1
DATA_TO_ANALYZE[0] => Equal0.IN2
DATA_TO_ANALYZE[1] => Equal0.IN1
DATA_TO_ANALYZE[2] => Equal0.IN3
DATA_TO_ANALYZE[3] => Equal0.IN0
TC <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_counter_2_tc:CNT_SAMPLES|RX_terminal_count_analyzer:TC_ANALYZER_2
DATA_TO_ANALYZE[0] => Equal0.IN2
DATA_TO_ANALYZE[1] => Equal0.IN1
DATA_TO_ANALYZE[2] => Equal0.IN0
DATA_TO_ANALYZE[3] => Equal0.IN3
TC <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_counter_with_tc:CNT_TIME_NOP
EN_CNT => RX_contatore:COUNTER.EN_CNT
CLEAR => RX_contatore:COUNTER.CLEAR
CLK => RX_contatore:COUNTER.CLK
TC <= RX_terminal_count_analyzer:TC_ANALYZER.TC


|UART|rx_unit:RX|rx_core:UUT|RX_counter_with_tc:CNT_TIME_NOP|RX_contatore:COUNTER
EN_CNT => DOUT.OUTPUTSELECT
CLEAR => DOUT.OUTPUTSELECT
CLK => DOUT[0]~reg0.CLK
DOUT[0] <= DOUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rx_unit:RX|rx_core:UUT|RX_counter_with_tc:CNT_TIME_NOP|RX_terminal_count_analyzer:TC_ANALYZER
DATA_TO_ANALYZE[0] => TC.DATAIN
TC <= DATA_TO_ANALYZE[0].DB_MAX_OUTPUT_PORT_TYPE


|UART|BusInterface:BI
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.ResetState.DATAIN
CLK => changeDetector:RX_DET.CLK
CLK => changeDetector:TX_DET.CLK
CLK => SR_FF:ATN_REG.clk
CLK => n_bit_register:BUFFER_CTRL.CLK
CLK => n_bit_register:CTRL_REG_2.CLK
CLK => FF:CLR_ATN_FF.CLK
CLK => currentState~2.DATAIN
CS => START_TX.IN1
CS => currentState.OUTPUTSELECT
CS => currentState.OUTPUTSELECT
CS => currentState.OUTPUTSELECT
CS => currentState.OUTPUTSELECT
CS => currentState.OUTPUTSELECT
CS => currentState.OUTPUTSELECT
A[0] => Dec3to8:DEC.in_data[0]
A[1] => Dec3to8:DEC.in_data[1]
A[2] => Dec3to8:DEC.in_data[2]
DIN[0] => n_bit_register:BUFFER_CTRL.data_in[0]
DIN[0] => PTX[0].DATAIN
DIN[1] => n_bit_register:BUFFER_CTRL.data_in[1]
DIN[1] => PTX[1].DATAIN
DIN[2] => n_bit_register:BUFFER_CTRL.data_in[2]
DIN[2] => PTX[2].DATAIN
DIN[3] => PTX[3].DATAIN
DIN[4] => PTX[4].DATAIN
DIN[5] => PTX[5].DATAIN
DIN[6] => PTX[6].DATAIN
DIN[7] => PTX[7].DATAIN
DOUT[0] <= gen_mux_2_1:MUX.ms[0]
DOUT[1] <= gen_mux_2_1:MUX.ms[1]
DOUT[2] <= gen_mux_2_1:MUX.ms[2]
DOUT[3] <= gen_mux_2_1:MUX.ms[3]
DOUT[4] <= gen_mux_2_1:MUX.ms[4]
DOUT[5] <= gen_mux_2_1:MUX.ms[5]
DOUT[6] <= gen_mux_2_1:MUX.ms[6]
DOUT[7] <= gen_mux_2_1:MUX.ms[7]
R_Wn => currentState.OUTPUTSELECT
R_Wn => currentState.OUTPUTSELECT
R_Wn => currentState.OUTPUTSELECT
R_Wn => currentState.OUTPUTSELECT
R_Wn => START_TX.IN1
ATNACK => ~NO_FANOUT~
ATN <= SR_FF:ATN_REG.Q
PRX[0] => gen_mux_2_1:MUX.xs[0]
PRX[1] => gen_mux_2_1:MUX.xs[1]
PRX[2] => gen_mux_2_1:MUX.xs[2]
PRX[3] => gen_mux_2_1:MUX.xs[3]
PRX[4] => gen_mux_2_1:MUX.xs[4]
PRX[5] => gen_mux_2_1:MUX.xs[5]
PRX[6] => gen_mux_2_1:MUX.xs[6]
PRX[7] => gen_mux_2_1:MUX.xs[7]
RX_DONE => RX_FULL.IN0
RX_BUSY => RX_FULL.IN1
RX_ERR => gen_mux_2_1:MUX.ys[2]
TX_DONE => changeDetector:TX_DET.DataIn
TX_DONE => gen_mux_2_1:MUX.ys[1]
PTX[0] <= DIN[0].DB_MAX_OUTPUT_PORT_TYPE
PTX[1] <= DIN[1].DB_MAX_OUTPUT_PORT_TYPE
PTX[2] <= DIN[2].DB_MAX_OUTPUT_PORT_TYPE
PTX[3] <= DIN[3].DB_MAX_OUTPUT_PORT_TYPE
PTX[4] <= DIN[4].DB_MAX_OUTPUT_PORT_TYPE
PTX[5] <= DIN[5].DB_MAX_OUTPUT_PORT_TYPE
PTX[6] <= DIN[6].DB_MAX_OUTPUT_PORT_TYPE
PTX[7] <= DIN[7].DB_MAX_OUTPUT_PORT_TYPE
TX_EN <= n_bit_register:CTRL_REG_2.data_out[1]
RX_EN <= n_bit_register:CTRL_REG_2.data_out[0]
START_TX <= START_TX.DB_MAX_OUTPUT_PORT_TYPE


|UART|BusInterface:BI|gen_mux_2_1:MUX
xs[0] => mux_2_1:a:0:muxes.x
xs[1] => mux_2_1:a:1:muxes.x
xs[2] => mux_2_1:a:2:muxes.x
xs[3] => mux_2_1:a:3:muxes.x
xs[4] => mux_2_1:a:4:muxes.x
xs[5] => mux_2_1:a:5:muxes.x
xs[6] => mux_2_1:a:6:muxes.x
xs[7] => mux_2_1:a:7:muxes.x
ys[0] => mux_2_1:a:0:muxes.y
ys[1] => mux_2_1:a:1:muxes.y
ys[2] => mux_2_1:a:2:muxes.y
ys[3] => mux_2_1:a:3:muxes.y
ys[4] => mux_2_1:a:4:muxes.y
ys[5] => mux_2_1:a:5:muxes.y
ys[6] => mux_2_1:a:6:muxes.y
ys[7] => mux_2_1:a:7:muxes.y
sl => mux_2_1:a:0:muxes.s
sl => mux_2_1:a:1:muxes.s
sl => mux_2_1:a:2:muxes.s
sl => mux_2_1:a:3:muxes.s
sl => mux_2_1:a:4:muxes.s
sl => mux_2_1:a:5:muxes.s
sl => mux_2_1:a:6:muxes.s
sl => mux_2_1:a:7:muxes.s
ms[0] <= mux_2_1:a:0:muxes.m
ms[1] <= mux_2_1:a:1:muxes.m
ms[2] <= mux_2_1:a:2:muxes.m
ms[3] <= mux_2_1:a:3:muxes.m
ms[4] <= mux_2_1:a:4:muxes.m
ms[5] <= mux_2_1:a:5:muxes.m
ms[6] <= mux_2_1:a:6:muxes.m
ms[7] <= mux_2_1:a:7:muxes.m


|UART|BusInterface:BI|gen_mux_2_1:MUX|mux_2_1:\a:0:muxes
x => m.IN0
y => m.IN0
s => m.IN1
s => m.IN1
m <= m.DB_MAX_OUTPUT_PORT_TYPE


|UART|BusInterface:BI|gen_mux_2_1:MUX|mux_2_1:\a:1:muxes
x => m.IN0
y => m.IN0
s => m.IN1
s => m.IN1
m <= m.DB_MAX_OUTPUT_PORT_TYPE


|UART|BusInterface:BI|gen_mux_2_1:MUX|mux_2_1:\a:2:muxes
x => m.IN0
y => m.IN0
s => m.IN1
s => m.IN1
m <= m.DB_MAX_OUTPUT_PORT_TYPE


|UART|BusInterface:BI|gen_mux_2_1:MUX|mux_2_1:\a:3:muxes
x => m.IN0
y => m.IN0
s => m.IN1
s => m.IN1
m <= m.DB_MAX_OUTPUT_PORT_TYPE


|UART|BusInterface:BI|gen_mux_2_1:MUX|mux_2_1:\a:4:muxes
x => m.IN0
y => m.IN0
s => m.IN1
s => m.IN1
m <= m.DB_MAX_OUTPUT_PORT_TYPE


|UART|BusInterface:BI|gen_mux_2_1:MUX|mux_2_1:\a:5:muxes
x => m.IN0
y => m.IN0
s => m.IN1
s => m.IN1
m <= m.DB_MAX_OUTPUT_PORT_TYPE


|UART|BusInterface:BI|gen_mux_2_1:MUX|mux_2_1:\a:6:muxes
x => m.IN0
y => m.IN0
s => m.IN1
s => m.IN1
m <= m.DB_MAX_OUTPUT_PORT_TYPE


|UART|BusInterface:BI|gen_mux_2_1:MUX|mux_2_1:\a:7:muxes
x => m.IN0
y => m.IN0
s => m.IN1
s => m.IN1
m <= m.DB_MAX_OUTPUT_PORT_TYPE


|UART|BusInterface:BI|changeDetector:RX_DET
CLK => FF:REG.CLK
DataIn => DataOut.IN1
DataIn => DataOut.IN1
DataIn => FF:REG.data_in
Reset => FF:REG.reset
DataOut <= DataOut.DB_MAX_OUTPUT_PORT_TYPE


|UART|BusInterface:BI|changeDetector:RX_DET|FF:REG
data_in => data_out.DATAB
CLK => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
enable => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|BusInterface:BI|changeDetector:TX_DET
CLK => FF:REG.CLK
DataIn => DataOut.IN1
DataIn => DataOut.IN1
DataIn => FF:REG.data_in
Reset => FF:REG.reset
DataOut <= DataOut.DB_MAX_OUTPUT_PORT_TYPE


|UART|BusInterface:BI|changeDetector:TX_DET|FF:REG
data_in => data_out.DATAB
CLK => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
enable => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|BusInterface:BI|SR_FF:ATN_REG
S => process_0.IN0
S => process_0.IN0
S => process_0.IN0
R => process_0.IN1
R => process_0.IN1
R => process_0.IN1
clk => Q~reg0.CLK
clk => Qprev.CLK
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|BusInterface:BI|n_bit_register:BUFFER_CTRL
data_in[0] => data_out.DATAB
data_in[1] => data_out.DATAB
data_in[2] => data_out.DATAB
CLK => data_out[0]~reg0.CLK
CLK => data_out[1]~reg0.CLK
CLK => data_out[2]~reg0.CLK
reset => data_out.OUTPUTSELECT
reset => data_out.OUTPUTSELECT
reset => data_out.OUTPUTSELECT
enable => data_out.OUTPUTSELECT
enable => data_out.OUTPUTSELECT
enable => data_out.OUTPUTSELECT
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|BusInterface:BI|n_bit_register:CTRL_REG_2
data_in[0] => data_out.DATAB
data_in[1] => data_out.DATAB
CLK => data_out[0]~reg0.CLK
CLK => data_out[1]~reg0.CLK
reset => data_out.OUTPUTSELECT
reset => data_out.OUTPUTSELECT
enable => data_out.OUTPUTSELECT
enable => data_out.OUTPUTSELECT
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|BusInterface:BI|FF:CLR_ATN_FF
data_in => data_out.DATAB
CLK => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
enable => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|BusInterface:BI|Dec3to8:DEC
in_data[0] => Mux0.IN10
in_data[0] => Mux1.IN10
in_data[0] => Mux2.IN10
in_data[0] => Mux3.IN10
in_data[0] => Mux4.IN10
in_data[0] => Mux5.IN10
in_data[0] => Mux6.IN10
in_data[0] => Mux7.IN10
in_data[1] => Mux0.IN9
in_data[1] => Mux1.IN9
in_data[1] => Mux2.IN9
in_data[1] => Mux3.IN9
in_data[1] => Mux4.IN9
in_data[1] => Mux5.IN9
in_data[1] => Mux6.IN9
in_data[1] => Mux7.IN9
in_data[2] => Mux0.IN8
in_data[2] => Mux1.IN8
in_data[2] => Mux2.IN8
in_data[2] => Mux3.IN8
in_data[2] => Mux4.IN8
in_data[2] => Mux5.IN8
in_data[2] => Mux6.IN8
in_data[2] => Mux7.IN8
out_data[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
out_data[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
out_data[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
out_data[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
out_data[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
out_data[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
out_data[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
out_data[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


